/* * $Id: NQueryMenuBar.java,v 1.23 2005/10/18 23:42:19 oz Exp $ * */package gov.noaa.pmel.nquery.ui;import gov.noaa.pmel.nquery.resources.NQueryConstants;import javax.swing.*;import javax.swing.event.*;import java.awt.*;import java.awt.event.*;import java.util.*;import javaoceanatlas.utility.PageSetupAction;import javaoceanatlas.utility.JOAMenuBarHolder;public class NQueryMenuBar  implements JOAMenuBarHolder {  private JMenu scalerCalcs;  private JMenu stationCalcs;  private JMenu help;  Component mThis;  NQueryMenuBarClient mClient;  JMenu mSwingWindowsMenu;  public NQueryMenuBar(Component c, boolean canCreate, boolean canCalc) {    mThis = c;    mClient = (NQueryMenuBarClient)c;    final ResourceBundle b = ResourceBundle.getBundle("gov.noaa.pmel.nquery.resources.NQueryResources");    JMenuBar menubar = new JMenuBar();    menubar.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));    ((JFrame)mThis).setJMenuBar(menubar);    // create the menus    // file menu    JMenu file = new JMenu(b.getString("kFile"));    mSwingWindowsMenu = new JMenu(b.getString("kWindows"));    JMenuItem close = new JMenuItem(b.getString("kClose"));    close.setActionCommand("close");    close.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_W, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask(), false)); ;    close.addActionListener((ActionListener)mThis);    file.add(close);    if (canCreate) {      // create a datbase      file.addSeparator();      JMenuItem create = new JMenuItem(b.getString("kCreateDB"));      create.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask(), false));      create.setActionCommand("create");      create.addActionListener((ActionListener)mThis);      file.add(create);    }    file.addSeparator();    PageSetupAction pageSetupAction = new PageSetupAction(b.getString("kPageSetup"));    file.add(pageSetupAction);    JMenuItem quit = null;    // quit/exit item    if (!NQueryConstants.ISMACOSX) {      file.addSeparator();      quit = new JMenuItem(b.getString("kExit"));      quit.setActionCommand("quit");      quit.addActionListener((ActionListener)mThis);      file.add(quit);    }    menubar.add(file);    if (canCalc) {      // Calculations menu      JMenu calcs = new JMenu(b.getString("kCalculations"));      stationCalcs = new JMenu(b.getString("kStationCalcs"));      JMenuItem parameterCalc = new JMenuItem(b.getString("kScalerIntegralCalcs"));      calcs.add(parameterCalc);      parameterCalc.setActionCommand("calcparam");      parameterCalc.addActionListener((ActionListener)mThis);      JMenuItem interpCalc = new JMenuItem(b.getString("kInterpolation"));      stationCalcs.add(interpCalc);      interpCalc.setActionCommand("calcinterp");      interpCalc.addActionListener((ActionListener)mThis);      JMenuItem integCalc = new JMenuItem(b.getString("kIntegration2"));      stationCalcs.add(integCalc);      integCalc.setActionCommand("calcinteg");      integCalc.addActionListener((ActionListener)mThis);      JMenuItem mldCalc = new JMenuItem(b.getString("kMixedLayerDepth"));      stationCalcs.add(mldCalc);      mldCalc.setActionCommand("calcmld");      mldCalc.addActionListener((ActionListener)mThis);      calcs.add(stationCalcs);      menubar.add(calcs);    }    // help menu    if (!NQueryConstants.ISMAC) {      JMenu help;      help = new JMenu(b.getString("kHelp2"));      JMenuItem about = null;      about = new JMenuItem(b.getString("kAbout"));      about.setActionCommand("about");      help.add(about);      about.addActionListener((ActionListener)mThis);      menubar.add(help);    }    menubar.add(mSwingWindowsMenu);  }  public JMenu getSwingWindowsMenu() {    return mSwingWindowsMenu;  }}