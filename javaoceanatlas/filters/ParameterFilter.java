/* * $Id: StationFilter.java,v 1.3 2005/06/17 18:03:16 oz Exp $ * */package javaoceanatlas.filters;import java.util.*;import javaoceanatlas.classicdatamodel.*;import javaoceanatlas.*;import javaoceanatlas.ui.*;import javaoceanatlas.resources.*;import java.io.DataOutputStream;import java.io.IOException;import javaoceanatlas.utility.*;public class ParameterFilter {	int[] mMissingParams = null;	FileViewer mFileViewer;	        public ParameterFilter(FileViewer fv) {    	mFileViewer = fv;    }        public boolean testSection(FileViewer fv, Section sech) {		// test whether this section has all the test parameters		for (int v=0; v<mMissingParams.length; v++) {			int pos = sech.getVarPos(fv.mAllProperties[mMissingParams[v]].getVarLabel(), false);			if (pos == -1) {				// this sech does not have this parameter--don't need to look any further				return false;			}		}		return true;    }        public boolean testBottle(FileViewer fv, Section sech, Bottle bh) {		boolean keep = true;		// station has all parameters now test whether they're non-missing for 		// the test bottle		for (int v=0; v<mMissingParams.length; v++) {			int pos = sech.getVarPos(fv.mAllProperties[mMissingParams[v]].getVarLabel(), false);			double x = bh.mDValues[pos];			if (x == JOAConstants.MISSINGVALUE)				keep = false;			else {				keep = true;			}			if (!keep)				break;		}    			return keep;    }        public int[] getMissingParams() {    	return mMissingParams;    }            public void setMissingParams(int s, int[] a) {    	mMissingParams = null;    	mMissingParams = new int[s];    	for (int i=0; i<s; i++)    		mMissingParams[i] = a[i];    }            public void writeToLog(String preamble) throws IOException {    	try {	    	JOAConstants.LogFileStream.writeBytes(preamble);			JOAConstants.LogFileStream.writeBytes("Parameter Filter:");					JOAConstants.LogFileStream.writeBytes("\n");							// missing params				JOAConstants.LogFileStream.writeBytes("\t" + "Filter by missing values for params: ");				for (int i=0; i<mMissingParams.length; i++) {					JOAConstants.LogFileStream.writeBytes(mFileViewer.mAllProperties[mMissingParams[i]].getVarLabel() + ",");				}				JOAConstants.LogFileStream.writeBytes("\n");			JOAConstants.LogFileStream.flush();		}		catch (IOException ex) {			throw ex;		}    }}    