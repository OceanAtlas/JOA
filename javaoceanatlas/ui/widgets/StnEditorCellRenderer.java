/* * $Id: StnEditorCellRenderer.java,v 1.1 2005/10/18 23:42:19 oz Exp $ * */package javaoceanatlas.ui.widgets;import javax.swing.JLabel;import javax.swing.JTable;import javax.swing.border.Border;import javax.swing.table.TableCellRenderer;import java.awt.Color;import java.awt.Component;import javaoceanatlas.utility.JOAFormulas;import javaoceanatlas.resources.JOAConstants;@SuppressWarnings("serial")public class StnEditorCellRenderer extends JLabel implements TableCellRenderer {  Border unselectedBorder = null;  Border selectedBorder = null;  boolean isBordered = true;  public StnEditorCellRenderer(boolean isBordered) {    super("", JLabel.RIGHT);    this.isBordered = isBordered;  }  public Component getTableCellRendererComponent(JTable table, Object cell, boolean isSelected, boolean hasFocus,                                                 int row, int column) {    if (cell instanceof StnEditorCell) {      StnEditorCell newCell = (StnEditorCell)cell;      // get the cellproperties      double val = newCell.getValue();      short qc = newCell.getQCValue();      short std = newCell.getQCStd();      short prec = newCell.getPrecision();      this.setOpaque(true);      // set the foreground color      this.setForeground(this.getQCColor(qc, std));      // set the JLabel text      this.setText(JOAFormulas.formatDouble(val, prec, false));      if (isSelected) {        setBackground(Color.lightGray);      }      else {        if (row % 2 == 0) {          setBackground(new Color(235, 235, 255));        }        else {          setBackground(Color.white);        }      }      setToolTipText("QC Value: " + getQCString(std, qc));    }    return this;  }  protected String getQCString(short qcstd, short qcVal) {    if (qcstd == JOAConstants.IGOSS_QC_STD) {      return new String("(" + String.valueOf(qcVal) + "I) ");    }    else if (qcstd == JOAConstants.WOCE_QC_STD) {      return new String("(" + String.valueOf(qcVal) + "W) ");    }    return "(undefined)";  }  private Color getQCColor(int qcVal, short std) {    if (std == JOAConstants.IGOSS_QC_STD) {      if (qcVal == 1) {        return Color.green.darker();      }      else if (qcVal == 2) {        return Color.green;      }      else if (qcVal == 3) {        return Color.green;      }      else if (qcVal == 4) {        return Color.red;      }      else if (qcVal == 8) {        return Color.yellow;      }      else {        return Color.gray.darker();      }    }    else if (std == JOAConstants.WOCE_QC_STD) {      if (qcVal == 2) {        return Color.green.darker();      }      else if (qcVal == 3 || qcVal == 6 || qcVal == 7 || qcVal == 8) {        return Color.green;      }      else if (qcVal == 4) {        return Color.red;      }      else {        return Color.gray.darker();      }    }    return Color.gray.darker();  }}